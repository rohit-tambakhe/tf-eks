# AWS Configuration
aws_region = "us-west-2"

# Cluster Configuration
cluster_name    = "eks-qa"
cluster_version = "1.28"
environment     = "qa"

# Network Configuration
vpc_cidr            = "10.1.0.0/16"
availability_zones  = ["us-west-2a", "us-west-2b", "us-west-2c"]
public_subnet_cidrs = ["10.1.1.0/24", "10.1.2.0/24", "10.1.3.0/24"]
private_subnet_cidrs = ["10.1.10.0/24", "10.1.20.0/24", "10.1.30.0/24"]

# Production-like network setup for QA
single_nat_gateway = false

# Cluster Access Configuration
endpoint_private_access      = true
endpoint_public_access       = true
endpoint_public_access_cidrs = ["0.0.0.0/0"]  # Restrict this for security

# Node Groups Configuration
node_groups = {
  general = {
    instance_types   = ["t3.large"]
    ami_type        = "AL2_x86_64"
    capacity_type   = "ON_DEMAND"
    disk_size       = 30
    desired_size    = 3
    max_size        = 6
    min_size        = 2
    max_unavailable = 1
    labels = {
      role = "general"
      environment = "qa"
    }
    taints = []
    tags = {
      Environment = "qa"
      NodeGroup   = "general"
    }
  }
  compute = {
    instance_types   = ["m5.large"]
    ami_type        = "AL2_x86_64"
    capacity_type   = "ON_DEMAND"
    disk_size       = 50
    desired_size    = 2
    max_size        = 4
    min_size        = 1
    max_unavailable = 1
    labels = {
      role = "compute"
      environment = "qa"
    }
    taints = []
    tags = {
      Environment = "qa"
      NodeGroup   = "compute"
    }
  }
  spot = {
    instance_types   = ["t3.large", "m5.large"]
    ami_type        = "AL2_x86_64"
    capacity_type   = "SPOT"
    disk_size       = 30
    desired_size    = 1
    max_size        = 3
    min_size        = 0
    max_unavailable = 1
    labels = {
      role = "spot"
      environment = "qa"
    }
    taints = [{
      key    = "spot"
      value  = "true"
      effect = "NO_SCHEDULE"
    }]
    tags = {
      Environment = "qa"
      NodeGroup   = "spot"
    }
  }
}

# Addons Configuration
enable_cluster_autoscaler           = true
enable_aws_load_balancer_controller = true
enable_ebs_csi_driver               = true
enable_metrics_server               = true
enable_external_dns                 = false
enable_cert_manager                 = false

# Monitoring Configuration
enable_container_insights = true
enable_fluent_bit        = true
enable_cloudwatch_alarms = true
log_retention_days       = 7

# Notification Configuration
alarm_notification_emails = [
  "qa-team@yourcompany.com",
  "devops@yourcompany.com"
]

# Tags
tags = {
  Environment = "qa"
  Project     = "eks-infrastructure"
  ManagedBy   = "terraform"
  Owner       = "qa-team"
  CostCenter  = "engineering"
  Purpose     = "testing"
}
