output "cluster_name" {
  description = "Name of the EKS cluster"
  value       = module.eks_cluster.cluster_name
}

output "cluster_endpoint" {
  description = "Endpoint for EKS control plane"
  value       = module.eks_cluster.cluster_endpoint
}

output "cluster_security_group_id" {
  description = "Security group ID attached to the EKS cluster"
  value       = module.eks_cluster.cluster_security_group_id
}

output "cluster_iam_role_arn" {
  description = "IAM role ARN associated with EKS cluster"
  value       = module.eks_cluster.cluster_iam_role_arn
}

output "cluster_certificate_authority_data" {
  description = "Base64 encoded certificate data required to communicate with the cluster"
  value       = module.eks_cluster.cluster_certificate_authority_data
}

output "cluster_version" {
  description = "The Kubernetes version for the cluster"
  value       = module.eks_cluster.cluster_version
}

output "vpc_id" {
  description = "ID of the VPC"
  value       = module.vpc.vpc_id
}

output "private_subnet_ids" {
  description = "List of IDs of private subnets"
  value       = module.vpc.private_subnet_ids
}

output "public_subnet_ids" {
  description = "List of IDs of public subnets"
  value       = module.vpc.public_subnet_ids
}

output "node_groups" {
  description = "Map of attribute maps for all EKS node groups created"
  value       = module.node_groups.node_groups
}

output "oidc_provider_arn" {
  description = "The ARN of the OIDC Provider"
  value       = module.eks_cluster.oidc_provider_arn
}

output "cloudwatch_log_group_names" {
  description = "Names of CloudWatch log groups created"
  value       = module.monitoring.cloudwatch_log_group_names
}

output "sns_topic_arn" {
  description = "ARN of the SNS topic for alerts"
  value       = module.monitoring.sns_topic_arn
}

output "kubectl_config" {
  description = "kubectl config as generated by the module"
  value = {
    cluster_name = module.eks_cluster.cluster_name
    endpoint     = module.eks_cluster.cluster_endpoint
    region       = var.aws_region
  }
}

# Instructions for connecting to the cluster
output "connection_instructions" {
  description = "Instructions for connecting to the EKS cluster"
  value = <<-EOT
    To connect to the EKS cluster, run the following commands:
    
    1. Update your kubeconfig:
       aws eks update-kubeconfig --region ${var.aws_region} --name ${module.eks_cluster.cluster_name}
    
    2. Verify the connection:
       kubectl get nodes
    
    3. Check cluster info:
       kubectl cluster-info
    
    4. View installed addons:
       kubectl get pods -n kube-system
  EOT
}
